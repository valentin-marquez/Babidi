---
const req = Astro.request;
---
<script is:inline>
async function getCookieExpiration(expiresInSeconds) {
    const expirationDate = new Date();
    expirationDate.setTime(expirationDate.getTime() + (expiresInSeconds * 1000));
    return expirationDate.toUTCString();
}

async function parseMagicLink(req) {
    const vals = window.location.hash.substring(1).split("&").map(kv => kv.split("="))
    const hashParameters = new Map(vals)

    const data = await fetch("/api/verifyToken", {
        method: "POST",
        headers: new Headers({ "Content-Type": "application/json" }),
        credentials: "same-origin",
        body: JSON.stringify({
            access_token: hashParameters.get('access_token'),
            expires_in: hashParameters.get('expires_in'),
            refresh_token: hashParameters.get('refresh_token'),
        }),
    })

    if (data.ok) {
        document.cookie = `sbat=${hashParameters.get('access_token')}; Path=/; expires=${getCookieExpiration(data.expires_in)};`;
        let result = await data.json();
        if (result.result.user.user_metadata.onboarding) {
            window.location.replace('/home');
        } else {
            window.location.replace('/onboarding');
        }
    } else {
        window.location.replace('/login');
    }
}
parseMagicLink()
</script>